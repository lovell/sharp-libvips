name: Build Release
on:
  push:
    tags:
    - v*
jobs:
  create-release:
    runs-on: 'ubuntu-latest'
    steps:
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true
    - shell: bash
      run: |
        echo '${{ steps.create-release.outputs.upload_url }}' > upload-url.txt
    - name: Save GitHub release upload URL for next job
      uses: actions/upload-artifact@v1
      with:
        name: upload-url
        path: upload-url.txt
  build:
    runs-on: 'ubuntu-latest'
    needs:
      - 'create-release'
    strategy:
      matrix:
        platform:
          - 'linux-x64'
          - 'linuxmusl-x64'
          - 'linux-armv6'
          - 'linux-armv7'
          - 'linux-arm64v8'
          - 'win32-x64'
    steps:
    - uses: actions/checkout@v1
    - name: Fetch GitHub Release upload URL
      uses: actions/download-artifact@v1
      with:
        name: upload-url
    - name: Set up environment variables
      shell: bash
      run: |
        echo "::set-env name=upload_url::$(cat upload-url/upload-url.txt)"
        echo "::set-env name=asset_file_name::libvips-$(cat LIBVIPS_VERSION)-${{ matrix.platform }}.tar.gz"
    - name: Build ${{ matrix.platform }}
      run: ./build.sh $(cat LIBVIPS_VERSION) ${{ matrix.platform }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.upload_url }}
        asset_path: ${{ env.asset_file_name }}
        asset_name: ${{ env.asset_file_name }}
        asset_content_type: application/gzip
